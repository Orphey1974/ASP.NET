name: .NET Docker Compose CI/CD

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop, feature/* ]

env:
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/promocodefactory
  TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ env.TAG }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker images
      run: |
        docker compose -f docker-compose.ci.yml build
        docker compose -f docker-compose.ci.yml push
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

  test:
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: promocodefactory
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Start services
      run: docker compose -f src/docker-compose.ci.yml up -d
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

    - name: Run database migrations
      run: docker compose -f src/docker-compose.ci.yml exec webhost dotnet ef database update
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

    - name: Run tests
      run: docker compose -f src/docker-compose.ci.yml exec webhost dotnet test --logger "trx;LogFileName=testresults.trx"
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

    - name: Copy test results
      run: docker compose -f src/docker-compose.ci.yml cp webhost:/app/TestResults ./test-results
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

    - name: Publish test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./test-results/*.trx

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to production
      run: |
        # Здесь могут быть команды для деплоя, например:
        # kubectl apply -f k8s/
        # или
        # ssh deploy@server "docker-compose pull && docker-compose up -d"
      env:
        PRODUCTION_SECRET: ${{ secrets.PRODUCTION_SECRET }}