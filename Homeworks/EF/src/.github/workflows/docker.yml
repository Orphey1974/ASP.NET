name: .NET CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop, feature/* ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: promocodefactory
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Клонировать репозиторий
      uses: actions/checkout@v4

    - name: Установить .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Восстановить зависимости
      run: dotnet restore PromoCodeFactory.sln
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

    - name: Сборка решения
      run: dotnet build PromoCodeFactory.sln --no-restore --configuration Release
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

    - name: Применить миграции к БД
      run: dotnet ef database update --project PromoCodeFactory.WebHost/PromoCodeFactory.WebHost.csproj
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

    - name: Запустить xUnit тесты
      run: dotnet test PromoCodeFactory.Tests/PromoCodeFactory.Tests.csproj --no-build --configuration Release --logger trx
      working-directory: ${{ github.workspace }}/Homeworks/EF/src

    - name: Публикация результатов тестов
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: '**/TestResults/*.trx'