---
description:
globs:
alwaysApply: true
---
Вот содержимое MD-файла с инструкциями для Copilot:

```markdown
# Инструкции для Copilot

## Общие правила
1. Все комментарии в коде должны быть на русском языке.
2. Пояснения к решениям и рекомендации должны даваться на русском языке.
3. Пояснительные комментарии в коде должны быть на русском языке.

## Code Guidelines
1. Стиль кодирования и форматирование кода должны соответствовать правилам из файла `orphey_coding-style.md`.
2. Настройки форматирования должны соответствовать `.editorconfig` решения.

## Создание тестов
1. При создании XUnit тестов соблюдайте правила из файла `orphey-XUnit-rules.md`.
2. Тесты должны быть:
   - Читаемыми
   - Изолированными
   - Содержать понятные названия на английском языке (как указано в guidelines)
   - Содержать комментарии на русском языке при необходимости

## Пример комментария
```csharp
// Проверяем, что пользователь с нулевым идентификатором вызывает исключение
[Fact]
public void UserService_GetUser_WithZeroId_ThrowsException()
{
    // Arrange
    var service = new UserService();

    // Act & Assert
    Assert.Throws<ArgumentException>(() => service.GetUser(0));
}
```

## Дополнительные указания
- Все сообщения об ошибках и логирование должны быть на русском языке.
- Названия переменных, методов и классов - на английском (по code guideline).
- Сложные алгоритмы должны сопровождаться пояснительными комментариями на русском.
```

И соответствующий C# код для создания единого файла с этими инструкциями:

```csharp
using System;
using System.IO;

class InstructionFileGenerator
{
    public void GenerateCopilotInstructionFile(string outputPath)
    {
        // Содержимое MD-файла с инструкциями
        var content = @"# Инструкции для Copilot

## Общие правила
1. Все комментарии в коде должны быть на русском языке.
2. Пояснения к решениям и рекомендации должны даваться на русском языке.
3. Пояснительные комментарии в коде должны быть на русском языке.

## Code Guidelines
1. Стиль кодирования и форматирование кода должны соответствовать правилам из файла `orphey_coding-style.md`.
2. Настройки форматирования должны соответствовать `.editorconfig` решения.

## Создание тестов
1. При создании XUnit тестов соблюдайте правила из файла `orphey-XUnit-rules.md`.
2. Тесты должны быть:
   - Читаемыми
   - Изолированными
   - Содержать понятные названия на английском языке (как указано в guidelines)
   - Содержать комментарии на русском языке при необходимости

## Пример комментария
```csharp
// Проверяем, что пользователь с нулевым идентификатором вызывает исключение
[Fact]
public void UserService_GetUser_WithZeroId_ThrowsException()
{
    // Arrange
    var service = new UserService();

    // Act & Assert
    Assert.Throws<ArgumentException>(() => service.GetUser(0));
}
```

## Дополнительные указания
- Все сообщения об ошибках и логирование должны быть на русском языке.
- Названия переменных, методов и классов - на английском (по code guideline).
- Сложные алгоритмы должны сопровождаться пояснительными комментариями на русском.";

        try
        {
            // Записываем содержимое в файл
            File.WriteAllText(outputPath, content);
            Console.WriteLine($"Файл инструкций успешно создан: {outputPath}");
        }
        catch (Exception ex)
        {
            // Выводим сообщение об ошибке, если что-то пошло не так
            Console.WriteLine($"Ошибка при создании файла: {ex.Message}");
        }
    }
}

// Пример использования:
// var generator = new InstructionFileGenerator();
// generator.GenerateCopilotInstructionFile("Copilot-Instructions.md");

```